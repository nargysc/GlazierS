{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColorScheme = exports.shouldSkipGeneratingVar = exports.getInitColorSchemeScript = exports.Experimental_CssVarsProvider = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _system = require(\"@mui/system\");\n\nvar _experimental_extendTheme = _interopRequireDefault(require(\"./experimental_extendTheme\"));\n\nvar _createTypography = _interopRequireDefault(require(\"./createTypography\"));\n\nconst shouldSkipGeneratingVar = keys => {\n  var _keys$;\n\n  return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/) || keys[0] === 'palette' && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));\n};\n\nexports.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\nconst defaultTheme = (0, _experimental_extendTheme.default)();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = (0, _system.unstable_createCssVarsProvider)({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = (0, _extends2.default)({}, theme, {\n      typography: (0, _createTypography.default)(theme.palette, theme.typography)\n    });\n    return newTheme;\n  },\n  shouldSkipGeneratingVar\n});\nexports.getInitColorSchemeScript = getInitColorSchemeScript;\nexports.useColorScheme = useColorScheme;\nexports.Experimental_CssVarsProvider = CssVarsProvider;","map":{"version":3,"sources":["/Users/nargysc/Desktop/ecomm-mui-master/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useColorScheme","shouldSkipGeneratingVar","getInitColorSchemeScript","Experimental_CssVarsProvider","_extends2","_system","_experimental_extendTheme","_createTypography","keys","_keys$","match","defaultTheme","default","CssVarsProvider","unstable_createCssVarsProvider","theme","attribute","modeStorageKey","colorSchemeStorageKey","defaultColorScheme","light","dark","resolveTheme","newTheme","typography","palette"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,uBAAR,GAAkCH,OAAO,CAACI,wBAAR,GAAmCJ,OAAO,CAACK,4BAAR,GAAuC,KAAK,CAA1I;;AAEA,IAAIC,SAAS,GAAGV,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIU,OAAO,GAAGV,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIW,yBAAyB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAtD;;AAEA,IAAIY,iBAAiB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,MAAMM,uBAAuB,GAAGO,IAAI,IAAI;AACtC,MAAIC,MAAJ;;AAEA,SAAO,CAAC,CAACD,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAc,uDAAd,CAAF,IAA4EF,IAAI,CAAC,CAAD,CAAJ,KAAY,SAAZ,IAAyB,CAAC,EAAE,CAACC,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAd,KAAsB,IAAtB,IAA8BC,MAAM,CAACC,KAAP,CAAa,sCAAb,CAAhC,CAA7G;AACD,CAJD;;AAMAZ,OAAO,CAACG,uBAAR,GAAkCA,uBAAlC;AACA,MAAMU,YAAY,GAAG,CAAC,GAAGL,yBAAyB,CAACM,OAA9B,GAArB;AACA,MAAM;AACJC,EAAAA,eADI;AAEJb,EAAAA,cAFI;AAGJE,EAAAA;AAHI,IAIF,CAAC,GAAGG,OAAO,CAACS,8BAAZ,EAA4C;AAC9CC,EAAAA,KAAK,EAAEJ,YADuC;AAE9CK,EAAAA,SAAS,EAAE,uBAFmC;AAG9CC,EAAAA,cAAc,EAAE,UAH8B;AAI9CC,EAAAA,qBAAqB,EAAE,kBAJuB;AAK9CC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE,OADW;AAElBC,IAAAA,IAAI,EAAE;AAFY,GAL0B;AAS9CC,EAAAA,YAAY,EAAEP,KAAK,IAAI;AACrB,UAAMQ,QAAQ,GAAG,CAAC,GAAGnB,SAAS,CAACQ,OAAd,EAAuB,EAAvB,EAA2BG,KAA3B,EAAkC;AACjDS,MAAAA,UAAU,EAAE,CAAC,GAAGjB,iBAAiB,CAACK,OAAtB,EAA+BG,KAAK,CAACU,OAArC,EAA8CV,KAAK,CAACS,UAApD;AADqC,KAAlC,CAAjB;AAGA,WAAOD,QAAP;AACD,GAd6C;AAe9CtB,EAAAA;AAf8C,CAA5C,CAJJ;AAqBAH,OAAO,CAACI,wBAAR,GAAmCA,wBAAnC;AACAJ,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACAF,OAAO,CAACK,4BAAR,GAAuCU,eAAvC","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColorScheme = exports.shouldSkipGeneratingVar = exports.getInitColorSchemeScript = exports.Experimental_CssVarsProvider = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _system = require(\"@mui/system\");\n\nvar _experimental_extendTheme = _interopRequireDefault(require(\"./experimental_extendTheme\"));\n\nvar _createTypography = _interopRequireDefault(require(\"./createTypography\"));\n\nconst shouldSkipGeneratingVar = keys => {\n  var _keys$;\n\n  return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/) || keys[0] === 'palette' && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));\n};\n\nexports.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\nconst defaultTheme = (0, _experimental_extendTheme.default)();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = (0, _system.unstable_createCssVarsProvider)({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = (0, _extends2.default)({}, theme, {\n      typography: (0, _createTypography.default)(theme.palette, theme.typography)\n    });\n    return newTheme;\n  },\n  shouldSkipGeneratingVar\n});\nexports.getInitColorSchemeScript = getInitColorSchemeScript;\nexports.useColorScheme = useColorScheme;\nexports.Experimental_CssVarsProvider = CssVarsProvider;"]},"metadata":{},"sourceType":"script"}