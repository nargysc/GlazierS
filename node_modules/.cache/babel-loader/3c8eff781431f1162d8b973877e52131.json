{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = extendTheme;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _createTheme = _interopRequireDefault(require(\"./createTheme\"));\n\nvar _Paper = require(\"../Paper/Paper\");\n\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n      _excluded2 = [\"palette\"];\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = (0, _Paper.getOverlayAlpha)(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  obj[key] = obj[key] || defaultValue;\n}\n\nconst createGetCssVar = function () {\n  let cssVarPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mui';\n  return (0, _system.unstable_createGetCssVar)(cssVarPrefix);\n};\n\nexports.createGetCssVar = createGetCssVar;\n\nfunction extendTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui'\n  } = options,\n        input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = (0, _createTheme.default)({\n    palette: (0, _extends2.default)({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = (0, _extends2.default)({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', (0, _system.darken)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.darken)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.darken)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.darken)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', lightPalette.getContrastText(palette.error.main));\n      setColor(palette.Alert, 'infoFilledColor', lightPalette.getContrastText(palette.info.main));\n      setColor(palette.Alert, 'successFilledColor', lightPalette.getContrastText(palette.success.main));\n      setColor(palette.Alert, 'warningFilledColor', lightPalette.getContrastText(palette.warning.main));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.lighten)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.lighten)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.lighten)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.lighten)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-light'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-light'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-light'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-light'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.lighten)(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', (0, _system.lighten)(palette.warning.main, 0.62));\n      const snackbarContentBackground = (0, _system.emphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', lightPalette.getContrastText(snackbarContentBackground));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.emphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.lighten)(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', (0, _system.lighten)((0, _system.alpha)(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', (0, _system.alpha)(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', (0, _system.lighten)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.lighten)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.lighten)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.lighten)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', darkPalette.getContrastText(palette.error.dark));\n      setColor(palette.Alert, 'infoFilledColor', darkPalette.getContrastText(palette.info.dark));\n      setColor(palette.Alert, 'successFilledColor', darkPalette.getContrastText(palette.success.dark));\n      setColor(palette.Alert, 'warningFilledColor', darkPalette.getContrastText(palette.warning.dark));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.darken)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.darken)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.darken)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.darken)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.darken)(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.darken)(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.darken)(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.darken)(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.darken)(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.darken)(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.darken)(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.darken)(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', (0, _system.darken)(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', (0, _system.darken)(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', (0, _system.darken)(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', (0, _system.darken)(palette.warning.main, 0.5));\n      const snackbarContentBackground = (0, _system.emphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', darkPalette.getContrastText(snackbarContentBackground));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.emphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.darken)(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.darken)(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.darken)(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.darken)(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.darken)(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.darken)(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', (0, _system.darken)((0, _system.alpha)(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', (0, _system.alpha)(palette.grey[700], 0.92));\n    }\n\n    palette.common.backgroundChannel = (0, _system.colorChannel)(palette.common.background);\n    palette.common.onBackgroundChannel = (0, _system.colorChannel)(palette.common.onBackground);\n    palette.dividerChannel = (0, _system.colorChannel)(palette.divider);\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = (0, _system.colorChannel)(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = (0, _system.colorChannel)(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = (0, _system.colorChannel)(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = (0, _system.colorChannel)(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = (0, _system.colorChannel)(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = (0, _system.colorChannel)(colors.secondary);\n      } // Action colors: action.active, action.selected\n\n\n      if (colors.active) {\n        palette[color].activeChannel = (0, _system.colorChannel)(colors.active);\n      }\n\n      if (colors.selected) {\n        palette[color].selectedChannel = (0, _system.colorChannel)(colors.selected);\n      }\n    });\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\n  return theme;\n}","map":{"version":3,"sources":["/Users/nargysc/Desktop/ecomm-mui-master/node_modules/@mui/material/styles/experimental_extendTheme.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createGetCssVar","default","extendTheme","_extends2","_objectWithoutPropertiesLoose2","_utils","_system","_createTheme","_Paper","_excluded","_excluded2","defaultDarkOverlays","Array","map","_","index","undefined","overlay","getOverlayAlpha","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","cssVarPrefix","unstable_createGetCssVar","options","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","getCssVar","_createThemeWithoutVa","light","palette","lightPalette","muiTheme","darkPalette","mode","dark","theme","opacity","inputPlaceholder","inputUnderline","switchTrackDisabled","switchTrack","overlays","common","Alert","darken","error","info","success","warning","getContrastText","main","lighten","AppBar","Avatar","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","emphasize","background","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","alpha","divider","Tooltip","grey","backgroundChannel","colorChannel","onBackgroundChannel","onBackground","dividerChannel","color","colors","mainChannel","lightChannel","darkChannel","contrastText","contrastTextChannel","primaryChannel","secondaryChannel","active","activeChannel","selected","selectedChannel","args","reduce","acc","argument","deepmerge"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = extendTheme;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _createTheme = _interopRequireDefault(require(\"./createTheme\"));\n\nvar _Paper = require(\"../Paper/Paper\");\n\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n      _excluded2 = [\"palette\"];\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = (0, _Paper.getOverlayAlpha)(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  obj[key] = obj[key] || defaultValue;\n}\n\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\n\nexports.createGetCssVar = createGetCssVar;\n\nfunction extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui'\n  } = options,\n        input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = (0, _createTheme.default)({\n    palette: (0, _extends2.default)({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = (0, _extends2.default)({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', (0, _system.darken)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.darken)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.darken)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.darken)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', lightPalette.getContrastText(palette.error.main));\n      setColor(palette.Alert, 'infoFilledColor', lightPalette.getContrastText(palette.info.main));\n      setColor(palette.Alert, 'successFilledColor', lightPalette.getContrastText(palette.success.main));\n      setColor(palette.Alert, 'warningFilledColor', lightPalette.getContrastText(palette.warning.main));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.lighten)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.lighten)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.lighten)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.lighten)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-light'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-light'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-light'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-light'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.lighten)(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', (0, _system.lighten)(palette.warning.main, 0.62));\n      const snackbarContentBackground = (0, _system.emphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', lightPalette.getContrastText(snackbarContentBackground));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.emphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.lighten)(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.lighten)(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.lighten)(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.lighten)(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.lighten)(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.lighten)(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', (0, _system.lighten)((0, _system.alpha)(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', (0, _system.alpha)(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', (0, _system.lighten)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.lighten)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.lighten)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.lighten)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', darkPalette.getContrastText(palette.error.dark));\n      setColor(palette.Alert, 'infoFilledColor', darkPalette.getContrastText(palette.info.dark));\n      setColor(palette.Alert, 'successFilledColor', darkPalette.getContrastText(palette.success.dark));\n      setColor(palette.Alert, 'warningFilledColor', darkPalette.getContrastText(palette.warning.dark));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.darken)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.darken)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.darken)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.darken)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.darken)(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.darken)(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.darken)(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.darken)(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.darken)(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.darken)(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.darken)(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.darken)(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', (0, _system.darken)(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', (0, _system.darken)(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', (0, _system.darken)(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', (0, _system.darken)(palette.warning.main, 0.5));\n      const snackbarContentBackground = (0, _system.emphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', darkPalette.getContrastText(snackbarContentBackground));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.emphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.darken)(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.darken)(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.darken)(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.darken)(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.darken)(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.darken)(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', (0, _system.darken)((0, _system.alpha)(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', (0, _system.alpha)(palette.grey[700], 0.92));\n    }\n\n    palette.common.backgroundChannel = (0, _system.colorChannel)(palette.common.background);\n    palette.common.onBackgroundChannel = (0, _system.colorChannel)(palette.common.onBackground);\n    palette.dividerChannel = (0, _system.colorChannel)(palette.divider);\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // Color palettes: primary, secondary, error, info, success, and warning\n\n      if (colors.main) {\n        palette[color].mainChannel = (0, _system.colorChannel)(colors.main);\n      }\n\n      if (colors.light) {\n        palette[color].lightChannel = (0, _system.colorChannel)(colors.light);\n      }\n\n      if (colors.dark) {\n        palette[color].darkChannel = (0, _system.colorChannel)(colors.dark);\n      }\n\n      if (colors.contrastText) {\n        palette[color].contrastTextChannel = (0, _system.colorChannel)(colors.contrastText);\n      } // Text colors: text.primary, text.secondary\n\n\n      if (colors.primary) {\n        palette[color].primaryChannel = (0, _system.colorChannel)(colors.primary);\n      }\n\n      if (colors.secondary) {\n        palette[color].secondaryChannel = (0, _system.colorChannel)(colors.secondary);\n      } // Action colors: action.active, action.selected\n\n\n      if (colors.active) {\n        palette[color].activeChannel = (0, _system.colorChannel)(colors.active);\n      }\n\n      if (colors.selected) {\n        palette[color].selectedChannel = (0, _system.colorChannel)(colors.selected);\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\n  return theme;\n}"]},"metadata":{},"sourceType":"script"}