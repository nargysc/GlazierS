{"ast":null,"code":"var _jsxFileName = \"/Users/nargysc/Desktop/ecomm-mui-master/src/hooks/useDialogModal.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function useDialogModal(Component) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const openDialog = useCallback(() => {\n    setOpen(true);\n  }, []);\n  const DialogComponent = useCallback(_ref => {\n    let { ...props\n    } = _ref;\n    if (!open) return null;\n\n    if (Component) {\n      return /*#__PURE__*/_jsxDEV(Component, {\n        open: open,\n        onClose: () => setOpen(false),\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    }\n  }, [open, Component]);\n  return [DialogComponent, openDialog];\n}\n\n_s(useDialogModal, \"w8HvtbSv92phdEQ/7HoG2Xehd7E=\");","map":{"version":3,"sources":["/Users/nargysc/Desktop/ecomm-mui-master/src/hooks/useDialogModal.js"],"names":["useCallback","useState","useDialogModal","Component","open","setOpen","openDialog","DialogComponent","props"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,eAAe,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMK,UAAU,GAAGN,WAAW,CAAC,MAAM;AACnCK,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAIA,QAAME,eAAe,GAAGP,WAAW,CACjC,QAAkB;AAAA,QAAjB,EAAE,GAAGQ;AAAL,KAAiB;AAChB,QAAI,CAACJ,IAAL,EAAW,OAAO,IAAP;;AAEX,QAAID,SAAJ,EAAe;AACb,0BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEC,IAAjB;AAAuB,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA7C;AAAA,WAA0DG;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GATgC,EAUjC,CAACJ,IAAD,EAAOD,SAAP,CAViC,CAAnC;AAaA,SAAO,CAACI,eAAD,EAAkBD,UAAlB,CAAP;AACD;;GArBuBJ,c","sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport default function useDialogModal(Component) {\n  const [open, setOpen] = useState(false);\n\n  const openDialog = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const DialogComponent = useCallback(\n    ({ ...props }) => {\n      if (!open) return null;\n\n      if (Component) {\n        return (\n          <Component open={open} onClose={() => setOpen(false)} {...props} />\n        );\n      }\n    },\n    [open, Component]\n  );\n\n  return [DialogComponent, openDialog];\n}\n"]},"metadata":{},"sourceType":"module"}